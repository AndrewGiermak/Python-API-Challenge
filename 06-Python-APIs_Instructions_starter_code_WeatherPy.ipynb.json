{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# WeatherPy\n",
    "----\n",
    "\n",
    "#### Note\n",
    "* Instructions have been included for each segment. You do not have to follow them exactly, but they are included to help you think through the steps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests\n",
    "import time\n",
    "import json\n",
    "from scipy.stats import linregress\n",
    "\n",
    "# Import API key\n",
    "api_key = \"a273098de036bf2627421c2729be5830\"\n",
    "\n",
    "# Incorporated citipy to determine city based on latitude and longitude\n",
    "from citipy import citipy\n",
    "\n",
    "# Output File (CSV)\n",
    "output_data_file = \"output_data/cities.csv\"\n",
    "\n",
    "# Range of latitudes and longitudes\n",
    "lat_range = (-90, 90)\n",
    "lng_range = (-180, 180)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate Cities List"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "601"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List for holding lat_lngs and cities\n",
    "lat_lngs = []\n",
    "cities = []\n",
    "\n",
    "# Create a set of random lat and lng combinations\n",
    "lats = np.random.uniform(lat_range[0], lat_range[1], size=1500)\n",
    "lngs = np.random.uniform(lng_range[0], lng_range[1], size=1500)\n",
    "lat_lngs = zip(lats, lngs)\n",
    "\n",
    "# Identify nearest city for each lat, lng combination\n",
    "for lat_lng in lat_lngs:\n",
    "    city = citipy.nearest_city(lat_lng[0], lat_lng[1]).city_name\n",
    "    \n",
    "    # If the city is unique, then add it to a our cities list\n",
    "    if city not in cities:\n",
    "        cities.append(city)\n",
    "\n",
    "# Print the city count to confirm sufficient count\n",
    "len(cities)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Perform API Calls\n",
    "* Perform a weather check on each city using a series of successive API calls.\n",
    "* Include a print log of each city as it'sbeing processed (with the city number and city name).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City Name</th>\n",
       "      <th>Country Code</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Cloudiness</th>\n",
       "      <th>Wind Speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [City Name, Country Code, Latitude, Longitude, Temperature, Humidity, Cloudiness, Wind Speed]\n",
       "Index: []"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# make dataframe and column categories\n",
    "\n",
    "column_names = (\"City Name\", \"Country Code\", \"Latitude\", \"Longitude\", \"Temperature\",\n",
    "            \"Humidity\",\"Cloudiness\",\"Wind Speed\")\n",
    "cities_df = pd.DataFrame(columns = column_names)\n",
    "cities_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "# perform API call\n",
    "\n",
    "api_key = \"a273098de036bf2627421c2729be5830\"\n",
    "url = \"http://api.openweathermap.org/data/2.5/weather?units=Imperial&APPID=\" + api_key\n",
    "\n",
    "units = \"Imperial\"\n",
    "query_url = url + \"&units=\" + units + \"&q=\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Getting API weather data\n",
      "----\n",
      "Getting record 0 for the city: arlit\n",
      "Record found for city: arlit with city id: 2447513\n",
      "Getting record 1 for the city: suffolk\n",
      "Record found for city: suffolk with city id: 5140076\n",
      "Getting record 2 for the city: vaini\n",
      "Record found for city: vaini with city id: 4032243\n",
      "Getting record 3 for the city: albany\n",
      "Record found for city: albany with city id: 5106841\n",
      "Getting record 4 for the city: kapaa\n",
      "Record found for city: kapaa with city id: 5848280\n",
      "Getting record 5 for the city: east london\n",
      "Record found for city: east london with city id: 1006984\n",
      "Getting record 6 for the city: hermanus\n",
      "Record found for city: hermanus with city id: 3366880\n",
      "Getting record 7 for the city: zhezkazgan\n",
      "Record found for city: zhezkazgan with city id: 1516589\n",
      "Getting record 8 for the city: port elizabeth\n",
      "Record found for city: port elizabeth with city id: 964420\n",
      "Getting record 9 for the city: norman wells\n",
      "Record found for city: norman wells with city id: 6089245\n",
      "Getting record 10 for the city: mataura\n",
      "Record found for city: mataura with city id: 6201424\n",
      "Getting record 11 for the city: port lincoln\n",
      "Record found for city: port lincoln with city id: 2063036\n",
      "Getting record 12 for the city: taolanaro\n",
      "No record found for city: taolanaro\n",
      "Getting record 13 for the city: marcona\n",
      "No record found for city: marcona\n",
      "Getting record 14 for the city: sa kaeo\n",
      "Record found for city: sa kaeo with city id: 1606807\n",
      "Getting record 15 for the city: bluff\n",
      "Record found for city: bluff with city id: 2206939\n",
      "Getting record 16 for the city: rikitea\n",
      "Record found for city: rikitea with city id: 4030556\n",
      "Getting record 17 for the city: juegang\n",
      "Record found for city: juegang with city id: 1804979\n",
      "Getting record 18 for the city: galle\n",
      "Record found for city: galle with city id: 1246294\n",
      "Getting record 19 for the city: zyryanka\n",
      "Record found for city: zyryanka with city id: 2119283\n",
      "Getting record 20 for the city: sinnamary\n",
      "Record found for city: sinnamary with city id: 3380290\n",
      "Getting record 21 for the city: tsihombe\n",
      "No record found for city: tsihombe\n",
      "Getting record 22 for the city: hilo\n",
      "Record found for city: hilo with city id: 5855927\n",
      "Getting record 23 for the city: punta arenas\n",
      "Record found for city: punta arenas with city id: 3874787\n",
      "Getting record 24 for the city: dikson\n",
      "Record found for city: dikson with city id: 1507390\n",
      "Getting record 25 for the city: valkeala\n",
      "Record found for city: valkeala with city id: 632669\n",
      "Getting record 26 for the city: constitucion\n",
      "Record found for city: constitucion with city id: 3893726\n",
      "Getting record 27 for the city: jamestown\n",
      "Record found for city: jamestown with city id: 5122534\n",
      "Getting record 28 for the city: cherskiy\n",
      "Record found for city: cherskiy with city id: 2126199\n",
      "Getting record 29 for the city: ushuaia\n",
      "Record found for city: ushuaia with city id: 3833367\n",
      "Getting record 30 for the city: bo phloi\n",
      "Record found for city: bo phloi with city id: 1153850\n",
      "Getting record 31 for the city: ahipara\n",
      "Record found for city: ahipara with city id: 2194098\n",
      "Getting record 32 for the city: srebrenica\n",
      "Record found for city: srebrenica with city id: 3190159\n",
      "Getting record 33 for the city: mandalgovi\n",
      "Record found for city: mandalgovi with city id: 2030065\n",
      "Getting record 34 for the city: waingapu\n",
      "Record found for city: waingapu with city id: 1622318\n",
      "Getting record 35 for the city: georgetown\n",
      "Record found for city: georgetown with city id: 1735106\n",
      "Getting record 36 for the city: mao\n",
      "Record found for city: mao with city id: 2514301\n",
      "Getting record 37 for the city: lobva\n",
      "Record found for city: lobva with city id: 1500426\n",
      "Getting record 38 for the city: illoqqortoormiut\n",
      "No record found for city: illoqqortoormiut\n",
      "Getting record 39 for the city: samarai\n",
      "Record found for city: samarai with city id: 2132606\n",
      "Getting record 40 for the city: iqaluit\n",
      "Record found for city: iqaluit with city id: 5983720\n",
      "Getting record 41 for the city: bredasdorp\n",
      "Record found for city: bredasdorp with city id: 1015776\n",
      "Getting record 42 for the city: camacha\n",
      "Record found for city: camacha with city id: 2270385\n",
      "Getting record 43 for the city: port shepstone\n",
      "Record found for city: port shepstone with city id: 964406\n",
      "Getting record 44 for the city: clyde river\n",
      "Record found for city: clyde river with city id: 5924351\n",
      "Getting record 45 for the city: klaksvik\n",
      "Record found for city: klaksvik with city id: 2618795\n",
      "Getting record 46 for the city: laguna\n",
      "Record found for city: laguna with city id: 5364271\n",
      "Getting record 47 for the city: anadyr\n",
      "Record found for city: anadyr with city id: 2127202\n",
      "Getting record 48 for the city: najran\n",
      "Record found for city: najran with city id: 103630\n",
      "Getting record 49 for the city: wanning\n",
      "Record found for city: wanning with city id: 1791779\n",
      "Getting record 50 for the city: falam\n",
      "Record found for city: falam with city id: 1326105\n",
      "Getting record 51 for the city: busselton\n",
      "Record found for city: busselton with city id: 2075265\n",
      "Getting record 52 for the city: mar del plata\n",
      "Record found for city: mar del plata with city id: 3430863\n",
      "Getting record 53 for the city: kindersley\n",
      "Record found for city: kindersley with city id: 5992154\n",
      "Getting record 54 for the city: salalah\n",
      "Record found for city: salalah with city id: 286621\n",
      "Getting record 55 for the city: ankpa\n",
      "Record found for city: ankpa with city id: 2349788\n",
      "Getting record 56 for the city: anchorage\n",
      "Record found for city: anchorage with city id: 5879400\n",
      "Getting record 57 for the city: jiddah\n",
      "No record found for city: jiddah\n",
      "Getting record 58 for the city: barrow\n",
      "Record found for city: barrow with city id: 5880054\n",
      "Getting record 59 for the city: nanortalik\n",
      "Record found for city: nanortalik with city id: 3421765\n",
      "Getting record 60 for the city: jambi\n",
      "Record found for city: jambi with city id: 1642858\n",
      "Getting record 61 for the city: ribeira grande\n",
      "Record found for city: ribeira grande with city id: 3372707\n",
      "Getting record 62 for the city: lavrentiya\n",
      "Record found for city: lavrentiya with city id: 4031637\n",
      "Getting record 63 for the city: chokurdakh\n",
      "Record found for city: chokurdakh with city id: 2126123\n",
      "Getting record 64 for the city: faanui\n",
      "Record found for city: faanui with city id: 4034551\n",
      "Getting record 65 for the city: leningradskiy\n",
      "Record found for city: leningradskiy with city id: 2123814\n",
      "Getting record 66 for the city: mys shmidta\n",
      "No record found for city: mys shmidta\n",
      "Getting record 67 for the city: tuktoyaktuk\n",
      "Record found for city: tuktoyaktuk with city id: 6170031\n",
      "Getting record 68 for the city: sri aman\n",
      "Record found for city: sri aman with city id: 1735799\n",
      "Getting record 69 for the city: shimoda\n",
      "Record found for city: shimoda with city id: 1852357\n",
      "Getting record 70 for the city: yeletskiy\n",
      "No record found for city: yeletskiy\n",
      "Getting record 71 for the city: bedford\n",
      "Record found for city: bedford with city id: 2656046\n",
      "Getting record 72 for the city: fecamp\n",
      "Record found for city: fecamp with city id: 3018794\n",
      "Getting record 73 for the city: kokoda\n",
      "Record found for city: kokoda with city id: 2093691\n",
      "Getting record 74 for the city: saint-philippe\n",
      "Record found for city: saint-philippe with city id: 935215\n",
      "Getting record 75 for the city: russell\n",
      "Record found for city: russell with city id: 4047434\n",
      "Getting record 76 for the city: lake charles\n",
      "Record found for city: lake charles with city id: 4330236\n",
      "Getting record 77 for the city: japura\n",
      "Record found for city: japura with city id: 1642773\n",
      "Getting record 78 for the city: puerto ayora\n",
      "Record found for city: puerto ayora with city id: 3652764\n",
      "Getting record 79 for the city: forio\n",
      "Record found for city: forio with city id: 3176748\n",
      "Getting record 80 for the city: camana\n",
      "Record found for city: camana with city id: 3945985\n",
      "Getting record 81 for the city: jawar\n",
      "Record found for city: jawar with city id: 1269110\n",
      "Getting record 82 for the city: torbay\n",
      "Record found for city: torbay with city id: 6167817\n",
      "Getting record 83 for the city: brownsville\n",
      "Record found for city: brownsville with city id: 4676740\n",
      "Getting record 84 for the city: provideniya\n",
      "Record found for city: provideniya with city id: 4031574\n",
      "Getting record 85 for the city: port alfred\n",
      "Record found for city: port alfred with city id: 964432\n",
      "Getting record 86 for the city: nishihara\n",
      "Record found for city: nishihara with city id: 1855342\n",
      "Getting record 87 for the city: nizhneyansk\n",
      "No record found for city: nizhneyansk\n",
      "Getting record 88 for the city: qaanaaq\n",
      "Record found for city: qaanaaq with city id: 3831208\n",
      "Getting record 89 for the city: waipawa\n",
      "Record found for city: waipawa with city id: 2206874\n",
      "Getting record 90 for the city: lusambo\n",
      "Record found for city: lusambo with city id: 210379\n",
      "Getting record 91 for the city: codrington\n",
      "Record found for city: codrington with city id: 2171099\n",
      "Getting record 92 for the city: narsaq\n",
      "Record found for city: narsaq with city id: 3421719\n",
      "Getting record 93 for the city: gisborne\n",
      "Record found for city: gisborne with city id: 2206854\n",
      "Getting record 94 for the city: new norfolk\n",
      "Record found for city: new norfolk with city id: 2155415\n",
      "Getting record 95 for the city: nikolskoye\n",
      "Record found for city: nikolskoye with city id: 546105\n",
      "Getting record 96 for the city: katsuura\n",
      "Record found for city: katsuura with city id: 2112309\n",
      "Getting record 97 for the city: belchatow\n",
      "Record found for city: belchatow with city id: 3103709\n",
      "Getting record 98 for the city: kirakira\n",
      "Record found for city: kirakira with city id: 2178753\n",
      "Getting record 99 for the city: atuona\n",
      "Record found for city: atuona with city id: 4020109\n",
      "Getting record 100 for the city: yellowknife\n",
      "Record found for city: yellowknife with city id: 6185377\n",
      "Getting record 101 for the city: nome\n",
      "Record found for city: nome with city id: 5870133\n",
      "Getting record 102 for the city: vila\n",
      "Record found for city: vila with city id: 7117100\n",
      "Getting record 103 for the city: arraial do cabo\n",
      "Record found for city: arraial do cabo with city id: 3471451\n",
      "Getting record 104 for the city: longyearbyen\n",
      "Record found for city: longyearbyen with city id: 2729907\n",
      "Getting record 105 for the city: halifax\n",
      "Record found for city: halifax with city id: 6324729\n",
      "Getting record 106 for the city: kindu\n",
      "Record found for city: kindu with city id: 212902\n",
      "Getting record 107 for the city: saskylakh\n",
      "Record found for city: saskylakh with city id: 2017155\n",
      "Getting record 108 for the city: hervey bay\n",
      "Record found for city: hervey bay with city id: 2146219\n",
      "Getting record 109 for the city: saint combs\n",
      "No record found for city: saint combs\n",
      "Getting record 110 for the city: khatanga\n",
      "Record found for city: khatanga with city id: 2022572\n",
      "Getting record 111 for the city: ayagoz\n",
      "Record found for city: ayagoz with city id: 1525988\n",
      "Getting record 112 for the city: flinders\n",
      "Record found for city: flinders with city id: 6255012\n",
      "Getting record 113 for the city: gurskoye\n",
      "No record found for city: gurskoye\n",
      "Getting record 114 for the city: loncoche\n",
      "Record found for city: loncoche with city id: 3882582\n",
      "Getting record 115 for the city: darnah\n",
      "Record found for city: darnah with city id: 87205\n",
      "Getting record 116 for the city: asadabad\n",
      "Record found for city: asadabad with city id: 142872\n",
      "Getting record 117 for the city: saquena\n",
      "Record found for city: saquena with city id: 3692020\n",
      "Getting record 118 for the city: bridlington\n",
      "Record found for city: bridlington with city id: 2654728\n",
      "Getting record 119 for the city: hithadhoo\n",
      "Record found for city: hithadhoo with city id: 1282256\n",
      "Getting record 120 for the city: brae\n",
      "Record found for city: brae with city id: 2654970\n",
      "Getting record 121 for the city: mikhaylovka\n",
      "Record found for city: mikhaylovka with city id: 527012\n",
      "Getting record 122 for the city: palmer\n",
      "Record found for city: palmer with city id: 4946620\n",
      "Getting record 123 for the city: paka\n",
      "Record found for city: paka with city id: 1734313\n",
      "Getting record 124 for the city: opuwo\n",
      "Record found for city: opuwo with city id: 3354077\n",
      "Getting record 125 for the city: necochea\n",
      "Record found for city: necochea with city id: 3430443\n",
      "Getting record 126 for the city: cuxhaven\n",
      "Record found for city: cuxhaven with city id: 2939658\n",
      "Getting record 127 for the city: kuusamo\n",
      "Record found for city: kuusamo with city id: 649924\n",
      "Getting record 128 for the city: ocampo\n",
      "Record found for city: ocampo with city id: 3994535\n",
      "Getting record 129 for the city: hobart\n",
      "Record found for city: hobart with city id: 2163355\n",
      "Getting record 130 for the city: blythe\n",
      "Record found for city: blythe with city id: 5329649\n",
      "Getting record 131 for the city: butaritari\n",
      "Record found for city: butaritari with city id: 2110227\n",
      "Getting record 132 for the city: korcula\n",
      "Record found for city: korcula with city id: 3197710\n",
      "Getting record 133 for the city: axim\n",
      "Record found for city: axim with city id: 2303611\n",
      "Getting record 134 for the city: pevek\n",
      "Record found for city: pevek with city id: 2122090\n",
      "Getting record 135 for the city: srandakan\n",
      "Record found for city: srandakan with city id: 1626493\n",
      "Getting record 136 for the city: mahebourg\n",
      "Record found for city: mahebourg with city id: 934322\n",
      "Getting record 137 for the city: dukat\n",
      "Record found for city: dukat with city id: 2125906\n",
      "Getting record 138 for the city: zorritos\n",
      "Record found for city: zorritos with city id: 3690608\n",
      "Getting record 139 for the city: mmabatho\n",
      "Record found for city: mmabatho with city id: 975436\n",
      "Getting record 140 for the city: melnikovo\n",
      "Record found for city: melnikovo with city id: 1499007\n",
      "Getting record 141 for the city: port blair\n",
      "Record found for city: port blair with city id: 1259385\n",
      "Getting record 142 for the city: qinzhou\n",
      "Record found for city: qinzhou with city id: 1797551\n",
      "Getting record 143 for the city: amderma\n",
      "No record found for city: amderma\n",
      "Getting record 144 for the city: nouakchott\n",
      "Record found for city: nouakchott with city id: 2377450\n",
      "Getting record 145 for the city: bengkulu\n",
      "Record found for city: bengkulu with city id: 1649150\n",
      "Getting record 146 for the city: tiksi\n",
      "Record found for city: tiksi with city id: 2015306\n",
      "Getting record 147 for the city: krasnogvardeyets\n",
      "Record found for city: krasnogvardeyets with city id: 542345\n",
      "Getting record 148 for the city: luderitz\n",
      "Record found for city: luderitz with city id: 3355672\n",
      "Getting record 149 for the city: mayo\n",
      "Record found for city: mayo with city id: 4362001\n",
      "Getting record 150 for the city: deputatskiy\n",
      "Record found for city: deputatskiy with city id: 2028164\n",
      "Getting record 151 for the city: garissa\n",
      "Record found for city: garissa with city id: 197745\n",
      "Getting record 152 for the city: chongwe\n",
      "Record found for city: chongwe with city id: 917688\n",
      "Getting record 153 for the city: cape town\n",
      "Record found for city: cape town with city id: 3369157\n",
      "Getting record 154 for the city: synya\n",
      "Record found for city: synya with city id: 485215\n",
      "Getting record 155 for the city: koslan\n",
      "Record found for city: koslan with city id: 544084\n",
      "Getting record 156 for the city: lebu\n",
      "Record found for city: lebu with city id: 3883457\n",
      "Getting record 157 for the city: bubaque\n",
      "Record found for city: bubaque with city id: 2374583\n",
      "Getting record 158 for the city: saleaula\n",
      "No record found for city: saleaula\n",
      "Getting record 159 for the city: belushya guba\n",
      "No record found for city: belushya guba\n",
      "Getting record 160 for the city: margate\n",
      "Record found for city: margate with city id: 2643044\n",
      "Getting record 161 for the city: sinop\n",
      "Record found for city: sinop with city id: 739598\n",
      "Getting record 162 for the city: port-cartier\n",
      "Record found for city: port-cartier with city id: 6111696\n",
      "Getting record 163 for the city: college\n",
      "Record found for city: college with city id: 5859699\n",
      "Getting record 164 for the city: kazaki\n",
      "Record found for city: kazaki with city id: 551535\n",
      "Getting record 165 for the city: charters towers\n",
      "Record found for city: charters towers with city id: 2171722\n",
      "Getting record 166 for the city: barentsburg\n",
      "No record found for city: barentsburg\n",
      "Getting record 167 for the city: astana\n",
      "Record found for city: astana with city id: 1526273\n",
      "Getting record 168 for the city: santo angelo\n",
      "Record found for city: santo angelo with city id: 3449696\n",
      "Getting record 169 for the city: severo-kurilsk\n",
      "Record found for city: severo-kurilsk with city id: 2121385\n",
      "Getting record 170 for the city: airai\n",
      "Record found for city: airai with city id: 1651810\n",
      "Getting record 171 for the city: virginia beach\n",
      "Record found for city: virginia beach with city id: 4791259\n",
      "Getting record 172 for the city: nanakuli\n",
      "Record found for city: nanakuli with city id: 5851349\n",
      "Getting record 173 for the city: upernavik\n",
      "Record found for city: upernavik with city id: 3418910\n",
      "Getting record 174 for the city: mount gambier\n",
      "Record found for city: mount gambier with city id: 2156643\n",
      "Getting record 175 for the city: khasan\n",
      "Record found for city: khasan with city id: 2039557\n",
      "Getting record 176 for the city: castro\n",
      "Record found for city: castro with city id: 3466704\n",
      "Getting record 177 for the city: fort nelson\n",
      "Record found for city: fort nelson with city id: 5955902\n",
      "Getting record 178 for the city: waitara\n",
      "Record found for city: waitara with city id: 2208091\n",
      "Getting record 179 for the city: mahajanga\n",
      "Record found for city: mahajanga with city id: 1062663\n",
      "Getting record 180 for the city: thompson\n",
      "Record found for city: thompson with city id: 6165406\n",
      "Getting record 181 for the city: cidreira\n",
      "Record found for city: cidreira with city id: 3466165\n",
      "Getting record 182 for the city: gunjur\n",
      "Record found for city: gunjur with city id: 2413419\n",
      "Getting record 183 for the city: sola\n",
      "Record found for city: sola with city id: 2134814\n",
      "Getting record 184 for the city: iskateley\n",
      "Record found for city: iskateley with city id: 866062\n",
      "Getting record 185 for the city: andenes\n",
      "Record found for city: andenes with city id: 3163146\n",
      "Getting record 186 for the city: bokspits\n",
      "No record found for city: bokspits\n",
      "Getting record 187 for the city: jutai\n",
      "Record found for city: jutai with city id: 3663693\n",
      "Getting record 188 for the city: bam\n",
      "Record found for city: bam with city id: 141736\n",
      "Getting record 189 for the city: marawi\n",
      "Record found for city: marawi with city id: 1701054\n",
      "Getting record 190 for the city: semey\n",
      "Record found for city: semey with city id: 1519422\n",
      "Getting record 191 for the city: khonuu\n",
      "No record found for city: khonuu\n",
      "Getting record 192 for the city: chiredzi\n",
      "Record found for city: chiredzi with city id: 893485\n",
      "Getting record 193 for the city: isangel\n",
      "Record found for city: isangel with city id: 2136825\n",
      "Getting record 194 for the city: wasilla\n",
      "Record found for city: wasilla with city id: 5877641\n",
      "Getting record 195 for the city: bend\n",
      "Record found for city: bend with city id: 5713587\n",
      "Getting record 196 for the city: voznesenye\n",
      "Record found for city: voznesenye with city id: 471160\n",
      "Getting record 197 for the city: waddan\n",
      "Record found for city: waddan with city id: 2209055\n",
      "Getting record 198 for the city: lorengau\n",
      "Record found for city: lorengau with city id: 2092164\n",
      "Getting record 199 for the city: tabiauea\n",
      "No record found for city: tabiauea\n",
      "Getting record 200 for the city: sitka\n",
      "Record found for city: sitka with city id: 5557293\n",
      "Getting record 201 for the city: abu zabad\n",
      "Record found for city: abu zabad with city id: 380348\n",
      "Getting record 202 for the city: burnie\n",
      "Record found for city: burnie with city id: 2173125\n",
      "Getting record 203 for the city: bad bramstedt\n",
      "Record found for city: bad bramstedt with city id: 2953537\n",
      "Getting record 204 for the city: kushmurun\n",
      "Record found for city: kushmurun with city id: 1519924\n",
      "Getting record 205 for the city: ugoofaaru\n",
      "Record found for city: ugoofaaru with city id: 1337619\n",
      "Getting record 206 for the city: umzimvubu\n",
      "No record found for city: umzimvubu\n",
      "Getting record 207 for the city: zeya\n",
      "Record found for city: zeya with city id: 2012593\n",
      "Getting record 208 for the city: avarua\n",
      "Record found for city: avarua with city id: 4035715\n",
      "Getting record 209 for the city: kaitangata\n",
      "Record found for city: kaitangata with city id: 2208248\n",
      "Getting record 210 for the city: stantsiya gorchakovo\n",
      "No record found for city: stantsiya gorchakovo\n",
      "Getting record 211 for the city: champerico\n",
      "Record found for city: champerico with city id: 3598787\n",
      "Getting record 212 for the city: lagoa\n",
      "Record found for city: lagoa with city id: 3372964\n",
      "Getting record 213 for the city: pisco\n",
      "Record found for city: pisco with city id: 3932145\n",
      "Getting record 214 for the city: mumford\n",
      "Record found for city: mumford with city id: 2297810\n",
      "Getting record 215 for the city: richards bay\n",
      "Record found for city: richards bay with city id: 962367\n",
      "Getting record 216 for the city: grindavik\n",
      "Record found for city: grindavik with city id: 3416888\n",
      "Getting record 217 for the city: qui nhon\n",
      "Record found for city: qui nhon with city id: 1568574\n",
      "Getting record 218 for the city: bastia\n",
      "Record found for city: bastia with city id: 3034639\n",
      "Getting record 219 for the city: yamethin\n",
      "Record found for city: yamethin with city id: 1285899\n",
      "Getting record 220 for the city: le vauclin\n",
      "Record found for city: le vauclin with city id: 3570392\n",
      "Getting record 221 for the city: mehamn\n",
      "Record found for city: mehamn with city id: 778707\n",
      "Getting record 222 for the city: karoi\n",
      "Record found for city: karoi with city id: 889191\n",
      "Getting record 223 for the city: san andres\n",
      "Record found for city: san andres with city id: 3670218\n",
      "Getting record 224 for the city: coihaique\n",
      "Record found for city: coihaique with city id: 3894426\n",
      "Getting record 225 for the city: urusha\n",
      "Record found for city: urusha with city id: 2014078\n",
      "Getting record 226 for the city: port-gentil\n",
      "Record found for city: port-gentil with city id: 2396518\n",
      "Getting record 227 for the city: palauig\n",
      "Record found for city: palauig with city id: 1696188\n",
      "Getting record 228 for the city: coaticook\n",
      "Record found for city: coaticook with city id: 5924500\n",
      "Getting record 229 for the city: san cristobal\n",
      "Record found for city: san cristobal with city id: 3628473\n",
      "Getting record 230 for the city: kodiak\n",
      "Record found for city: kodiak with city id: 5866583\n",
      "Getting record 231 for the city: santiago del estero\n",
      "Record found for city: santiago del estero with city id: 3835869\n",
      "Getting record 232 for the city: lander\n",
      "Record found for city: lander with city id: 5830007\n",
      "Getting record 233 for the city: aanekoski\n",
      "Record found for city: aanekoski with city id: 662096\n",
      "Getting record 234 for the city: petropavlovsk-kamchatskiy\n",
      "Record found for city: petropavlovsk-kamchatskiy with city id: 2122104\n",
      "Getting record 235 for the city: san policarpo\n",
      "Record found for city: san policarpo with city id: 1688696\n",
      "Getting record 236 for the city: zheleznodorozhnyy\n",
      "Record found for city: zheleznodorozhnyy with city id: 463355\n",
      "Getting record 237 for the city: dahegam\n",
      "Record found for city: dahegam with city id: 1273704\n",
      "Getting record 238 for the city: oriximina\n",
      "Record found for city: oriximina with city id: 3393471\n",
      "Getting record 239 for the city: pacifica\n",
      "Record found for city: pacifica with city id: 5380420\n",
      "Getting record 240 for the city: karpuninskiy\n",
      "No record found for city: karpuninskiy\n",
      "Getting record 241 for the city: sorong\n",
      "Record found for city: sorong with city id: 1626542\n",
      "Getting record 242 for the city: belaya gora\n",
      "Record found for city: belaya gora with city id: 2126785\n",
      "Getting record 243 for the city: vestmannaeyjar\n",
      "Record found for city: vestmannaeyjar with city id: 3412093\n",
      "Getting record 244 for the city: skelleftea\n",
      "Record found for city: skelleftea with city id: 602913\n",
      "Getting record 245 for the city: encheng\n",
      "Record found for city: encheng with city id: 1811729\n",
      "Getting record 246 for the city: chuy\n",
      "Record found for city: chuy with city id: 3443061\n",
      "Getting record 247 for the city: maryville\n",
      "Record found for city: maryville with city id: 4639848\n",
      "Getting record 248 for the city: wagar\n",
      "Record found for city: wagar with city id: 364027\n",
      "Getting record 249 for the city: saryozek\n",
      "Record found for city: saryozek with city id: 1519580\n",
      "Getting record 250 for the city: mogadishu\n",
      "Record found for city: mogadishu with city id: 53654\n",
      "Getting record 251 for the city: bitung\n",
      "Record found for city: bitung with city id: 1648636\n",
      "Getting record 252 for the city: ancud\n",
      "Record found for city: ancud with city id: 3899695\n",
      "Getting record 253 for the city: ekhabi\n",
      "Record found for city: ekhabi with city id: 2122614\n",
      "Getting record 254 for the city: atikokan\n",
      "Record found for city: atikokan with city id: 5888001\n",
      "Getting record 255 for the city: hualmay\n",
      "Record found for city: hualmay with city id: 3939761\n",
      "Getting record 256 for the city: san patricio\n",
      "Record found for city: san patricio with city id: 3985168\n",
      "Getting record 257 for the city: mareeba\n",
      "Record found for city: mareeba with city id: 2158767\n",
      "Getting record 258 for the city: bonavista\n",
      "Record found for city: bonavista with city id: 5905393\n",
      "Getting record 259 for the city: sibolga\n",
      "Record found for city: sibolga with city id: 1213855\n",
      "Getting record 260 for the city: nha trang\n",
      "Record found for city: nha trang with city id: 1572151\n",
      "Getting record 261 for the city: taoudenni\n",
      "Record found for city: taoudenni with city id: 2450173\n",
      "Getting record 262 for the city: kalmunai\n",
      "Record found for city: kalmunai with city id: 1242110\n",
      "Getting record 263 for the city: padre bernardo\n",
      "Record found for city: padre bernardo with city id: 3455580\n",
      "Getting record 264 for the city: cayenne\n",
      "Record found for city: cayenne with city id: 3382160\n",
      "Getting record 265 for the city: sioux lookout\n",
      "Record found for city: sioux lookout with city id: 6148373\n",
      "Getting record 266 for the city: rabo de peixe\n",
      "Record found for city: rabo de peixe with city id: 3372745\n",
      "Getting record 267 for the city: talovaya\n",
      "Record found for city: talovaya with city id: 484747\n",
      "Getting record 268 for the city: pathein\n",
      "Record found for city: pathein with city id: 1328421\n",
      "Getting record 269 for the city: revelstoke\n",
      "Record found for city: revelstoke with city id: 6121621\n",
      "Getting record 270 for the city: husavik\n",
      "Record found for city: husavik with city id: 2629833\n",
      "Getting record 271 for the city: yemelyanovo\n",
      "Record found for city: yemelyanovo with city id: 1486031\n",
      "Getting record 272 for the city: severobaykalsk\n",
      "Record found for city: severobaykalsk with city id: 2016910\n",
      "Getting record 273 for the city: benjamin hill\n",
      "Record found for city: benjamin hill with city id: 4017152\n",
      "Getting record 274 for the city: kysyl-syr\n",
      "Record found for city: kysyl-syr with city id: 2021017\n",
      "Getting record 275 for the city: talnakh\n",
      "Record found for city: talnakh with city id: 1490256\n",
      "Getting record 276 for the city: samusu\n",
      "No record found for city: samusu\n",
      "Getting record 277 for the city: banjar\n",
      "Record found for city: banjar with city id: 1650232\n",
      "Getting record 278 for the city: baruun-urt\n",
      "Record found for city: baruun-urt with city id: 2032614\n",
      "Getting record 279 for the city: mongoumba\n",
      "Record found for city: mongoumba with city id: 2384377\n",
      "Getting record 280 for the city: beira\n",
      "Record found for city: beira with city id: 1052373\n",
      "Getting record 281 for the city: jinan\n",
      "Record found for city: jinan with city id: 1805753\n",
      "Getting record 282 for the city: la romana\n",
      "Record found for city: la romana with city id: 3500957\n",
      "Getting record 283 for the city: cap malheureux\n",
      "Record found for city: cap malheureux with city id: 934649\n",
      "Getting record 284 for the city: roald\n",
      "Record found for city: roald with city id: 3141667\n",
      "Getting record 285 for the city: zabol\n",
      "Record found for city: zabol with city id: 1121143\n",
      "Getting record 286 for the city: cap-aux-meules\n",
      "Record found for city: cap-aux-meules with city id: 5915327\n",
      "Getting record 287 for the city: fare\n",
      "Record found for city: fare with city id: 4034496\n",
      "Getting record 288 for the city: vaitupu\n",
      "No record found for city: vaitupu\n",
      "Getting record 289 for the city: lumberton\n",
      "Record found for city: lumberton with city id: 4477525\n",
      "Getting record 290 for the city: posse\n",
      "Record found for city: posse with city id: 3452599\n",
      "Getting record 291 for the city: rocha\n",
      "Record found for city: rocha with city id: 3440777\n",
      "Getting record 292 for the city: nyimba\n",
      "Record found for city: nyimba with city id: 900056\n",
      "Getting record 293 for the city: havre-saint-pierre\n",
      "Record found for city: havre-saint-pierre with city id: 5972291\n",
      "Getting record 294 for the city: asyut\n",
      "Record found for city: asyut with city id: 359783\n",
      "Getting record 295 for the city: alofi\n",
      "Record found for city: alofi with city id: 4036284\n",
      "Getting record 296 for the city: bud\n",
      "Record found for city: bud with city id: 4255151\n",
      "Getting record 297 for the city: kavieng\n",
      "Record found for city: kavieng with city id: 2094342\n",
      "Getting record 298 for the city: lodja\n",
      "Record found for city: lodja with city id: 211647\n",
      "Getting record 299 for the city: nivala\n",
      "Record found for city: nivala with city id: 644499\n",
      "Getting record 300 for the city: tasiilaq\n",
      "Record found for city: tasiilaq with city id: 3424607\n",
      "Getting record 301 for the city: hamilton\n",
      "Record found for city: hamilton with city id: 4513583\n",
      "Getting record 302 for the city: bourail\n",
      "Record found for city: bourail with city id: 2141714\n",
      "Getting record 303 for the city: carnarvon\n",
      "Record found for city: carnarvon with city id: 2074865\n",
      "Getting record 304 for the city: itanhem\n",
      "Record found for city: itanhem with city id: 3460785\n",
      "Getting record 305 for the city: ust-nera\n",
      "Record found for city: ust-nera with city id: 2120048\n",
      "Getting record 306 for the city: sao joao da barra\n",
      "Record found for city: sao joao da barra with city id: 3448903\n",
      "Getting record 307 for the city: san rafael del sur\n",
      "Record found for city: san rafael del sur with city id: 3616594\n",
      "Getting record 308 for the city: mount isa\n",
      "Record found for city: mount isa with city id: 2065594\n",
      "Getting record 309 for the city: buraydah\n",
      "Record found for city: buraydah with city id: 107304\n",
      "Getting record 310 for the city: ostrovnoy\n",
      "Record found for city: ostrovnoy with city id: 556268\n",
      "Getting record 311 for the city: xining\n",
      "Record found for city: xining with city id: 1788852\n",
      "Getting record 312 for the city: varzelandia\n",
      "Record found for city: varzelandia with city id: 3445442\n",
      "Getting record 313 for the city: kieta\n",
      "Record found for city: kieta with city id: 2094027\n",
      "Getting record 314 for the city: namibe\n",
      "Record found for city: namibe with city id: 3347019\n",
      "Getting record 315 for the city: porto novo\n",
      "Record found for city: porto novo with city id: 2392087\n",
      "Getting record 316 for the city: guerrero negro\n",
      "Record found for city: guerrero negro with city id: 4021858\n",
      "Getting record 317 for the city: zhangye\n",
      "Record found for city: zhangye with city id: 1785036\n",
      "Getting record 318 for the city: hinton\n",
      "Record found for city: hinton with city id: 5975503\n",
      "Getting record 319 for the city: los llanos de aridane\n",
      "Record found for city: los llanos de aridane with city id: 2514651\n",
      "Getting record 320 for the city: saint-georges\n",
      "Record found for city: saint-georges with city id: 3579925\n",
      "Getting record 321 for the city: burma\n",
      "Record found for city: burma with city id: 1327865\n",
      "Getting record 322 for the city: manokwari\n",
      "Record found for city: manokwari with city id: 1636308\n",
      "Getting record 323 for the city: esperance\n",
      "Record found for city: esperance with city id: 2071860\n",
      "Getting record 324 for the city: jacareacanga\n",
      "Record found for city: jacareacanga with city id: 3397763\n",
      "Getting record 325 for the city: eagle pass\n",
      "Record found for city: eagle pass with city id: 5520677\n",
      "Getting record 326 for the city: victoria\n",
      "Record found for city: victoria with city id: 1819729\n",
      "Getting record 327 for the city: sentyabrskiy\n",
      "No record found for city: sentyabrskiy\n",
      "Getting record 328 for the city: moose factory\n",
      "Record found for city: moose factory with city id: 6078372\n",
      "Getting record 329 for the city: la ronge\n",
      "Record found for city: la ronge with city id: 6050066\n",
      "Getting record 330 for the city: santa barbara\n",
      "Record found for city: santa barbara with city id: 5392952\n",
      "Getting record 331 for the city: palmeiras de goias\n",
      "Record found for city: palmeiras de goias with city id: 3455362\n",
      "Getting record 332 for the city: linchuan\n",
      "No record found for city: linchuan\n",
      "Getting record 333 for the city: saint george\n",
      "Record found for city: saint george with city id: 5546220\n",
      "Getting record 334 for the city: zhuozhou\n",
      "No record found for city: zhuozhou\n",
      "Getting record 335 for the city: beringovskiy\n",
      "Record found for city: beringovskiy with city id: 2126710\n",
      "Getting record 336 for the city: winnemucca\n",
      "Record found for city: winnemucca with city id: 5710360\n",
      "Getting record 337 for the city: yulara\n",
      "Record found for city: yulara with city id: 6355222\n",
      "Getting record 338 for the city: atar\n",
      "Record found for city: atar with city id: 2381334\n",
      "Getting record 339 for the city: ponta do sol\n",
      "Record found for city: ponta do sol with city id: 2264557\n",
      "Getting record 340 for the city: mitsamiouli\n",
      "Record found for city: mitsamiouli with city id: 921786\n",
      "Getting record 341 for the city: aswan\n",
      "Record found for city: aswan with city id: 359792\n",
      "Getting record 342 for the city: chapais\n",
      "Record found for city: chapais with city id: 5919850\n",
      "Getting record 343 for the city: rawson\n",
      "Record found for city: rawson with city id: 3839307\n",
      "Getting record 344 for the city: aykhal\n",
      "Record found for city: aykhal with city id: 2027296\n",
      "Getting record 345 for the city: harper\n",
      "Record found for city: harper with city id: 2276492\n",
      "Getting record 346 for the city: hamina\n",
      "Record found for city: hamina with city id: 659169\n",
      "Getting record 347 for the city: eina\n",
      "Record found for city: eina with city id: 6453355\n",
      "Getting record 348 for the city: matara\n",
      "Record found for city: matara with city id: 1235846\n",
      "Getting record 349 for the city: ossora\n",
      "Record found for city: ossora with city id: 2122389\n",
      "Getting record 350 for the city: alta gracia\n",
      "Record found for city: alta gracia with city id: 3866163\n",
      "Getting record 351 for the city: berdigestyakh\n",
      "Record found for city: berdigestyakh with city id: 2026861\n",
      "Getting record 352 for the city: ust-tsilma\n",
      "Record found for city: ust-tsilma with city id: 477940\n",
      "Getting record 353 for the city: kalaleh\n",
      "Record found for city: kalaleh with city id: 129512\n",
      "Getting record 354 for the city: dzaoudzi\n",
      "Record found for city: dzaoudzi with city id: 921900\n",
      "Getting record 355 for the city: yasenskaya\n",
      "Record found for city: yasenskaya with city id: 468782\n",
      "Getting record 356 for the city: filingue\n",
      "Record found for city: filingue with city id: 2444995\n",
      "Getting record 357 for the city: aripuana\n",
      "Record found for city: aripuana with city id: 3665202\n",
      "Getting record 358 for the city: bandar-e lengeh\n",
      "Record found for city: bandar-e lengeh with city id: 141665\n",
      "Getting record 359 for the city: louisbourg\n",
      "No record found for city: louisbourg\n",
      "Getting record 360 for the city: finschhafen\n",
      "Record found for city: finschhafen with city id: 2097418\n",
      "Getting record 361 for the city: adre\n",
      "Record found for city: adre with city id: 245669\n",
      "Getting record 362 for the city: yangambi\n",
      "Record found for city: yangambi with city id: 203717\n",
      "Getting record 363 for the city: kahului\n",
      "Record found for city: kahului with city id: 5847411\n",
      "Getting record 364 for the city: lumeje\n",
      "Record found for city: lumeje with city id: 876123\n",
      "Getting record 365 for the city: zhangjiakou\n",
      "Record found for city: zhangjiakou with city id: 2033196\n",
      "Getting record 366 for the city: muravlenko\n",
      "Record found for city: muravlenko with city id: 1540711\n",
      "Getting record 367 for the city: deggendorf\n",
      "Record found for city: deggendorf with city id: 2938540\n",
      "Getting record 368 for the city: warrnambool\n",
      "Record found for city: warrnambool with city id: 2144528\n",
      "Getting record 369 for the city: vlasinesti\n",
      "Record found for city: vlasinesti with city id: 662553\n",
      "Getting record 370 for the city: stanislav\n",
      "Record found for city: stanislav with city id: 692944\n",
      "Getting record 371 for the city: pangai\n",
      "Record found for city: pangai with city id: 4032369\n",
      "Getting record 372 for the city: kitui\n",
      "Record found for city: kitui with city id: 191038\n",
      "Getting record 373 for the city: bilibino\n",
      "Record found for city: bilibino with city id: 2126682\n",
      "Getting record 374 for the city: ola\n",
      "Record found for city: ola with city id: 2122574\n",
      "Getting record 375 for the city: palabuhanratu\n",
      "No record found for city: palabuhanratu\n",
      "Getting record 376 for the city: grand river south east\n",
      "No record found for city: grand river south east\n",
      "Getting record 377 for the city: hinganghat\n",
      "Record found for city: hinganghat with city id: 1270077\n",
      "Getting record 378 for the city: buchanan\n",
      "Record found for city: buchanan with city id: 2278158\n",
      "Getting record 379 for the city: hovd\n",
      "Record found for city: hovd with city id: 1516048\n",
      "Getting record 380 for the city: san lucas\n",
      "Record found for city: san lucas with city id: 3527920\n",
      "Getting record 381 for the city: ponta delgada\n",
      "Record found for city: ponta delgada with city id: 3372783\n",
      "Getting record 382 for the city: madison\n",
      "Record found for city: madison with city id: 4074277\n",
      "Getting record 383 for the city: medvedka\n",
      "Record found for city: medvedka with city id: 528010\n",
      "Getting record 384 for the city: prince rupert\n",
      "Record found for city: prince rupert with city id: 6113406\n",
      "Getting record 385 for the city: nemuro\n",
      "Record found for city: nemuro with city id: 2128975\n",
      "Getting record 386 for the city: faribault\n",
      "Record found for city: faribault with city id: 5026291\n",
      "Getting record 387 for the city: hofn\n",
      "Record found for city: hofn with city id: 2630299\n",
      "Getting record 388 for the city: buala\n",
      "Record found for city: buala with city id: 2109528\n",
      "Getting record 389 for the city: tumannyy\n",
      "No record found for city: tumannyy\n",
      "Getting record 390 for the city: domoni\n",
      "Record found for city: domoni with city id: 921906\n",
      "Getting record 391 for the city: touros\n",
      "Record found for city: touros with city id: 3386213\n",
      "Getting record 392 for the city: paithan\n",
      "Record found for city: paithan with city id: 1260833\n",
      "Getting record 393 for the city: lakatoro\n",
      "Record found for city: lakatoro with city id: 2136697\n",
      "Getting record 394 for the city: sorland\n",
      "Record found for city: sorland with city id: 3137469\n",
      "Getting record 395 for the city: aflu\n",
      "No record found for city: aflu\n",
      "Getting record 396 for the city: ilulissat\n",
      "Record found for city: ilulissat with city id: 3423146\n",
      "Getting record 397 for the city: heilbron\n",
      "Record found for city: heilbron with city id: 997140\n",
      "Getting record 398 for the city: kil\n",
      "Record found for city: kil with city id: 2700960\n",
      "Getting record 399 for the city: never\n",
      "Record found for city: never with city id: 2990474\n",
      "Getting record 400 for the city: bethel\n",
      "Record found for city: bethel with city id: 5282297\n",
      "Getting record 401 for the city: rosetta\n",
      "Record found for city: rosetta with city id: 350203\n",
      "Getting record 402 for the city: oranjemund\n",
      "Record found for city: oranjemund with city id: 3354071\n",
      "Getting record 403 for the city: yar-sale\n",
      "Record found for city: yar-sale with city id: 1486321\n",
      "Getting record 404 for the city: beboto\n",
      "Record found for city: beboto with city id: 2435837\n",
      "Getting record 405 for the city: gorin\n",
      "Record found for city: gorin with city id: 2023943\n",
      "Getting record 406 for the city: vila velha\n",
      "Record found for city: vila velha with city id: 3445026\n",
      "Getting record 407 for the city: mazatlan\n",
      "Record found for city: mazatlan with city id: 3996322\n",
      "Getting record 408 for the city: novyye burasy\n",
      "Record found for city: novyye burasy with city id: 517172\n",
      "Getting record 409 for the city: olinda\n",
      "Record found for city: olinda with city id: 3393536\n",
      "Getting record 410 for the city: jaroslaw\n",
      "Record found for city: jaroslaw with city id: 770380\n",
      "Getting record 411 for the city: murwara\n",
      "Record found for city: murwara with city id: 1262395\n",
      "Getting record 412 for the city: san joaquin\n",
      "Record found for city: san joaquin with city id: 3628267\n",
      "Getting record 413 for the city: alyangula\n",
      "Record found for city: alyangula with city id: 2079582\n",
      "Getting record 414 for the city: benghazi\n",
      "Record found for city: benghazi with city id: 88319\n",
      "Getting record 415 for the city: cuamba\n",
      "Record found for city: cuamba with city id: 1047660\n",
      "Getting record 416 for the city: verkhnevilyuysk\n",
      "Record found for city: verkhnevilyuysk with city id: 2013639\n",
      "Getting record 417 for the city: padang\n",
      "Record found for city: padang with city id: 1633419\n",
      "Getting record 418 for the city: kaeo\n",
      "Record found for city: kaeo with city id: 2189343\n",
      "Getting record 419 for the city: ukiah\n",
      "Record found for city: ukiah with city id: 5404476\n",
      "Getting record 420 for the city: bose\n",
      "Record found for city: bose with city id: 6457397\n",
      "Getting record 421 for the city: kocevje\n",
      "Record found for city: kocevje with city id: 3197943\n",
      "Getting record 422 for the city: geraldton\n",
      "Record found for city: geraldton with city id: 2070998\n",
      "Getting record 423 for the city: sistranda\n",
      "Record found for city: sistranda with city id: 3139597\n",
      "Getting record 424 for the city: miri\n",
      "Record found for city: miri with city id: 1738050\n",
      "Getting record 425 for the city: muzhi\n",
      "Record found for city: muzhi with city id: 1498161\n",
      "Getting record 426 for the city: hay river\n",
      "Record found for city: hay river with city id: 5972762\n",
      "Getting record 427 for the city: chicama\n",
      "Record found for city: chicama with city id: 3698359\n",
      "Getting record 428 for the city: batticaloa\n",
      "Record found for city: batticaloa with city id: 1250161\n",
      "Getting record 429 for the city: smithers\n",
      "Record found for city: smithers with city id: 6149996\n",
      "Getting record 430 for the city: pierre\n",
      "Record found for city: pierre with city id: 5767918\n",
      "Getting record 431 for the city: gasa\n",
      "Record found for city: gasa with city id: 281133\n",
      "Getting record 432 for the city: gat\n",
      "Record found for city: gat with city id: 293842\n",
      "Getting record 433 for the city: bergerac\n",
      "Record found for city: bergerac with city id: 3033390\n",
      "Getting record 434 for the city: chimbote\n",
      "Record found for city: chimbote with city id: 3698304\n",
      "Getting record 435 for the city: grand-santi\n",
      "Record found for city: grand-santi with city id: 3381538\n",
      "Getting record 436 for the city: lichinga\n",
      "Record found for city: lichinga with city id: 1043893\n",
      "Getting record 437 for the city: pasir gudang\n",
      "Record found for city: pasir gudang with city id: 1880252\n",
      "Getting record 438 for the city: wagrowiec\n",
      "Record found for city: wagrowiec with city id: 3082712\n",
      "Getting record 439 for the city: redmond\n",
      "Record found for city: redmond with city id: 5808079\n",
      "Getting record 440 for the city: saint anthony\n",
      "Record found for city: saint anthony with city id: 5044290\n",
      "Getting record 441 for the city: verkhnyaya inta\n",
      "Record found for city: verkhnyaya inta with city id: 1487332\n",
      "Getting record 442 for the city: ivybridge\n",
      "Record found for city: ivybridge with city id: 2645988\n",
      "Getting record 443 for the city: huarmey\n",
      "Record found for city: huarmey with city id: 3939168\n",
      "Getting record 444 for the city: mogocha\n",
      "Record found for city: mogocha with city id: 2019912\n",
      "Getting record 445 for the city: salinas\n",
      "Record found for city: salinas with city id: 5391295\n",
      "Getting record 446 for the city: shakawe\n",
      "Record found for city: shakawe with city id: 933077\n",
      "Getting record 447 for the city: birao\n",
      "Record found for city: birao with city id: 240210\n",
      "Getting record 448 for the city: yeppoon\n",
      "Record found for city: yeppoon with city id: 2142316\n",
      "Getting record 449 for the city: majene\n",
      "Record found for city: majene with city id: 1636806\n",
      "Getting record 450 for the city: onega\n",
      "Record found for city: onega with city id: 515246\n",
      "Getting record 451 for the city: am timan\n",
      "Record found for city: am timan with city id: 245338\n",
      "Getting record 452 for the city: biltine\n",
      "Record found for city: biltine with city id: 244878\n",
      "Getting record 453 for the city: bustamante\n",
      "Record found for city: bustamante with city id: 4016485\n",
      "Getting record 454 for the city: czersk\n",
      "Record found for city: czersk with city id: 3100984\n",
      "Getting record 455 for the city: colares\n",
      "Record found for city: colares with city id: 2269142\n",
      "Getting record 456 for the city: lasa\n",
      "Record found for city: lasa with city id: 3175096\n",
      "Getting record 457 for the city: tabuny\n",
      "Record found for city: tabuny with city id: 1490356\n",
      "Getting record 458 for the city: ahuimanu\n",
      "Record found for city: ahuimanu with city id: 5856516\n",
      "Getting record 459 for the city: cascais\n",
      "Record found for city: cascais with city id: 2269594\n",
      "Getting record 460 for the city: sorvag\n",
      "No record found for city: sorvag\n",
      "Getting record 461 for the city: beatrice\n",
      "Record found for city: beatrice with city id: 5063646\n",
      "Getting record 462 for the city: san quintin\n",
      "Record found for city: san quintin with city id: 3984997\n",
      "Getting record 463 for the city: seybaplaya\n",
      "Record found for city: seybaplaya with city id: 3516685\n",
      "Getting record 464 for the city: rungata\n",
      "No record found for city: rungata\n",
      "Getting record 465 for the city: brigham city\n",
      "Record found for city: brigham city with city id: 5771960\n",
      "Getting record 466 for the city: kutum\n",
      "Record found for city: kutum with city id: 371745\n",
      "Getting record 467 for the city: olga\n",
      "Record found for city: olga with city id: 2018553\n",
      "Getting record 468 for the city: play cu\n",
      "No record found for city: play cu\n",
      "Getting record 469 for the city: toliary\n",
      "No record found for city: toliary\n",
      "Getting record 470 for the city: yerbogachen\n",
      "Record found for city: yerbogachen with city id: 2012956\n",
      "Getting record 471 for the city: whitehorse\n",
      "Record found for city: whitehorse with city id: 6180550\n",
      "Getting record 472 for the city: vila franca do campo\n",
      "Record found for city: vila franca do campo with city id: 3372472\n",
      "Getting record 473 for the city: saint-pierre\n",
      "Record found for city: saint-pierre with city id: 935214\n",
      "Getting record 474 for the city: kisangani\n",
      "Record found for city: kisangani with city id: 212730\n",
      "Getting record 475 for the city: kautokeino\n",
      "Record found for city: kautokeino with city id: 779330\n",
      "Getting record 476 for the city: kamenskoye\n",
      "No record found for city: kamenskoye\n",
      "Getting record 477 for the city: kruisfontein\n",
      "Record found for city: kruisfontein with city id: 986717\n",
      "Getting record 478 for the city: vostok\n",
      "Record found for city: vostok with city id: 2013279\n",
      "Getting record 479 for the city: te anau\n",
      "Record found for city: te anau with city id: 2181625\n",
      "Getting record 480 for the city: hazorasp\n",
      "Record found for city: hazorasp with city id: 1513957\n",
      "Getting record 481 for the city: portland\n",
      "Record found for city: portland with city id: 5746545\n",
      "Getting record 482 for the city: mackenzie\n",
      "Record found for city: mackenzie with city id: 6063191\n",
      "Getting record 483 for the city: dingle\n",
      "Record found for city: dingle with city id: 1714733\n",
      "Getting record 484 for the city: vardo\n",
      "Record found for city: vardo with city id: 777019\n",
      "Getting record 485 for the city: miami\n",
      "Record found for city: miami with city id: 4164138\n",
      "Getting record 486 for the city: savannah bight\n",
      "Record found for city: savannah bight with city id: 3601402\n",
      "Getting record 487 for the city: maykain\n",
      "No record found for city: maykain\n",
      "Getting record 488 for the city: suzu\n",
      "No record found for city: suzu\n",
      "Getting record 489 for the city: bilma\n",
      "Record found for city: bilma with city id: 2446796\n",
      "Getting record 490 for the city: okhotsk\n",
      "Record found for city: okhotsk with city id: 2122605\n",
      "Getting record 491 for the city: woodland\n",
      "Record found for city: woodland with city id: 5410430\n",
      "Getting record 492 for the city: verpelet\n",
      "Record found for city: verpelet with city id: 714081\n",
      "Getting record 493 for the city: san felipe\n",
      "Record found for city: san felipe with city id: 3628423\n",
      "Getting record 494 for the city: beian\n",
      "Record found for city: beian with city id: 3160100\n",
      "Getting record 495 for the city: labuhan\n",
      "Record found for city: labuhan with city id: 8079926\n",
      "Getting record 496 for the city: makat\n",
      "Record found for city: makat with city id: 608872\n",
      "Getting record 497 for the city: lolua\n",
      "No record found for city: lolua\n",
      "Getting record 498 for the city: pacific grove\n",
      "Record found for city: pacific grove with city id: 5380437\n",
      "Getting record 499 for the city: yumen\n",
      "Record found for city: yumen with city id: 1528998\n",
      "Getting record 500 for the city: santa maria da vitoria\n",
      "Record found for city: santa maria da vitoria with city id: 3450063\n",
      "Getting record 501 for the city: anar darreh\n",
      "No record found for city: anar darreh\n",
      "Getting record 502 for the city: haines junction\n",
      "Record found for city: haines junction with city id: 5969025\n",
      "Getting record 503 for the city: itumba\n",
      "Record found for city: itumba with city id: 158876\n",
      "Getting record 504 for the city: puebloviejo\n",
      "Record found for city: puebloviejo with city id: 3671615\n",
      "Getting record 505 for the city: lompoc\n",
      "Record found for city: lompoc with city id: 5367788\n",
      "Getting record 506 for the city: karakol\n",
      "Record found for city: karakol with city id: 1528121\n",
      "Getting record 507 for the city: taburi\n",
      "No record found for city: taburi\n",
      "Getting record 508 for the city: saldanha\n",
      "Record found for city: saldanha with city id: 3361934\n",
      "Getting record 509 for the city: huilong\n",
      "Record found for city: huilong with city id: 1806840\n",
      "Getting record 510 for the city: gamba\n",
      "Record found for city: gamba with city id: 2400547\n",
      "Getting record 511 for the city: port hardy\n",
      "Record found for city: port hardy with city id: 6111862\n",
      "Getting record 512 for the city: piranhas\n",
      "Record found for city: piranhas with city id: 3453586\n",
      "Getting record 513 for the city: snezhnogorsk\n",
      "Record found for city: snezhnogorsk with city id: 795243\n",
      "Getting record 514 for the city: rio grande\n",
      "Record found for city: rio grande with city id: 3451138\n",
      "Getting record 515 for the city: phibun mangsahan\n",
      "Record found for city: phibun mangsahan with city id: 1607730\n",
      "Getting record 516 for the city: dubna\n",
      "Record found for city: dubna with city id: 564719\n",
      "Getting record 517 for the city: bambous virieux\n",
      "Record found for city: bambous virieux with city id: 1106677\n",
      "Getting record 518 for the city: eskasem\n",
      "No record found for city: eskasem\n",
      "Getting record 519 for the city: beaverlodge\n",
      "Record found for city: beaverlodge with city id: 5896969\n",
      "Getting record 520 for the city: gambo\n",
      "Record found for city: gambo with city id: 239300\n",
      "Getting record 521 for the city: abeokuta\n",
      "Record found for city: abeokuta with city id: 2352947\n",
      "Getting record 522 for the city: broome\n",
      "Record found for city: broome with city id: 5110365\n",
      "Getting record 523 for the city: itoman\n",
      "Record found for city: itoman with city id: 1861280\n",
      "Getting record 524 for the city: punta alta\n",
      "Record found for city: punta alta with city id: 3839982\n",
      "Getting record 525 for the city: nago\n",
      "Record found for city: nago with city id: 1856068\n",
      "Getting record 526 for the city: artyk\n",
      "No record found for city: artyk\n",
      "Getting record 527 for the city: turbat\n",
      "Record found for city: turbat with city id: 1163054\n",
      "Getting record 528 for the city: viedma\n",
      "Record found for city: viedma with city id: 3832899\n",
      "Getting record 529 for the city: izhmorskiy\n",
      "Record found for city: izhmorskiy with city id: 1505228\n",
      "Getting record 530 for the city: tecolutla\n",
      "Record found for city: tecolutla with city id: 3516148\n",
      "Getting record 531 for the city: talara\n",
      "Record found for city: talara with city id: 3691582\n",
      "Getting record 532 for the city: howard springs\n",
      "Record found for city: howard springs with city id: 6301965\n",
      "Getting record 533 for the city: warqla\n",
      "No record found for city: warqla\n",
      "Getting record 534 for the city: pajapita\n",
      "Record found for city: pajapita with city id: 3591885\n",
      "Getting record 535 for the city: puerto rondon\n",
      "Record found for city: puerto rondon with city id: 3671337\n",
      "Getting record 536 for the city: indianola\n",
      "Record found for city: indianola with city id: 4861719\n",
      "Getting record 537 for the city: nalut\n",
      "Record found for city: nalut with city id: 2214432\n",
      "Getting record 538 for the city: lulea\n",
      "Record found for city: lulea with city id: 604490\n",
      "Getting record 539 for the city: groningen\n",
      "Record found for city: groningen with city id: 2755249\n",
      "Getting record 540 for the city: maine-soroa\n",
      "Record found for city: maine-soroa with city id: 2441447\n",
      "Getting record 541 for the city: naze\n",
      "Record found for city: naze with city id: 1855540\n",
      "Getting record 542 for the city: manado\n",
      "Record found for city: manado with city id: 1636544\n",
      "Getting record 543 for the city: egvekinot\n",
      "Record found for city: egvekinot with city id: 4031742\n",
      "Getting record 544 for the city: troitskoye\n",
      "Record found for city: troitskoye with city id: 1489209\n",
      "Getting record 545 for the city: adrar\n",
      "Record found for city: adrar with city id: 2381972\n",
      "Getting record 546 for the city: bajina basta\n",
      "Record found for city: bajina basta with city id: 3204623\n",
      "Getting record 547 for the city: kloulklubed\n",
      "Record found for city: kloulklubed with city id: 7671223\n",
      "Getting record 548 for the city: luwuk\n",
      "Record found for city: luwuk with city id: 1637001\n",
      "Getting record 549 for the city: little current\n",
      "Record found for city: little current with city id: 6055388\n",
      "Getting record 550 for the city: tuatapere\n",
      "Record found for city: tuatapere with city id: 2180815\n",
      "Getting record 551 for the city: boende\n",
      "Record found for city: boende with city id: 218680\n",
      "Getting record 552 for the city: mandurah\n",
      "Record found for city: mandurah with city id: 2067119\n",
      "Getting record 553 for the city: san rafael\n",
      "Record found for city: san rafael with city id: 3836669\n",
      "Getting record 554 for the city: carberry\n",
      "Record found for city: carberry with city id: 5916706\n",
      "Getting record 555 for the city: alta floresta\n",
      "Record found for city: alta floresta with city id: 6316343\n",
      "Getting record 556 for the city: chabahar\n",
      "Record found for city: chabahar with city id: 1161724\n",
      "Getting record 557 for the city: namuac\n",
      "Record found for city: namuac with city id: 1698354\n",
      "Getting record 558 for the city: buenaventura\n",
      "Record found for city: buenaventura with city id: 3688451\n",
      "Getting record 559 for the city: shingu\n",
      "Record found for city: shingu with city id: 1847947\n",
      "Getting record 560 for the city: iba\n",
      "Record found for city: iba with city id: 1711447\n",
      "Getting record 561 for the city: lata\n",
      "Record found for city: lata with city id: 2738381\n",
      "Getting record 562 for the city: halalo\n",
      "No record found for city: halalo\n",
      "Getting record 563 for the city: boyolangu\n",
      "Record found for city: boyolangu with city id: 1648082\n",
      "Getting record 564 for the city: fairbanks\n",
      "Record found for city: fairbanks with city id: 5861897\n",
      "Getting record 565 for the city: izhma\n",
      "Record found for city: izhma with city id: 554830\n",
      "Getting record 566 for the city: eureka\n",
      "Record found for city: eureka with city id: 5563397\n",
      "Getting record 567 for the city: sabha\n",
      "Record found for city: sabha with city id: 2212775\n",
      "Getting record 568 for the city: ulaanbaatar\n",
      "Record found for city: ulaanbaatar with city id: 2028462\n",
      "Getting record 569 for the city: sorel\n",
      "Record found for city: sorel with city id: 6151350\n",
      "Getting record 570 for the city: ulaangom\n",
      "Record found for city: ulaangom with city id: 1515029\n",
      "Getting record 571 for the city: sungaipenuh\n",
      "Record found for city: sungaipenuh with city id: 1625929\n",
      "Getting record 572 for the city: mabaruma\n",
      "Record found for city: mabaruma with city id: 3377301\n",
      "Getting record 573 for the city: madimba\n",
      "Record found for city: madimba with city id: 878141\n",
      "Getting record 574 for the city: tasbuget\n",
      "No record found for city: tasbuget\n",
      "Getting record 575 for the city: schertz\n",
      "Record found for city: schertz with city id: 4727326\n",
      "Getting record 576 for the city: la rochelle\n",
      "Record found for city: la rochelle with city id: 3006787\n",
      "Getting record 577 for the city: cedral\n",
      "Record found for city: cedral with city id: 4014914\n",
      "Getting record 578 for the city: laki\n",
      "Record found for city: laki with city id: 729509\n",
      "Getting record 579 for the city: dzhusaly\n",
      "No record found for city: dzhusaly\n",
      "Getting record 580 for the city: coahuayana\n",
      "Record found for city: coahuayana with city id: 4013679\n",
      "Getting record 581 for the city: bulawayo\n",
      "Record found for city: bulawayo with city id: 894701\n",
      "Getting record 582 for the city: kemijarvi\n",
      "Record found for city: kemijarvi with city id: 653272\n",
      "Getting record 583 for the city: longkou\n",
      "Record found for city: longkou with city id: 1802550\n",
      "Getting record 584 for the city: phitsanulok\n",
      "Record found for city: phitsanulok with city id: 1607707\n",
      "Getting record 585 for the city: pasighat\n",
      "Record found for city: pasighat with city id: 1260206\n",
      "Getting record 586 for the city: bajo baudo\n",
      "No record found for city: bajo baudo\n",
      "Getting record 587 for the city: gazli\n",
      "Record found for city: gazli with city id: 1513990\n",
      "Getting record 588 for the city: lexington\n",
      "Record found for city: lexington with city id: 4297983\n",
      "Getting record 589 for the city: tabas\n",
      "Record found for city: tabas with city id: 113659\n",
      "Getting record 590 for the city: malwan\n",
      "No record found for city: malwan\n",
      "Getting record 591 for the city: aden\n",
      "Record found for city: aden with city id: 415189\n",
      "Getting record 592 for the city: shelburne\n",
      "Record found for city: shelburne with city id: 6145890\n",
      "Getting record 593 for the city: turayf\n",
      "Record found for city: turayf with city id: 101312\n",
      "Getting record 594 for the city: zaraysk\n",
      "Record found for city: zaraysk with city id: 464687\n",
      "Getting record 595 for the city: dien bien\n",
      "No record found for city: dien bien\n",
      "Getting record 596 for the city: normandin\n",
      "Record found for city: normandin with city id: 6089179\n",
      "Getting record 597 for the city: abu samrah\n",
      "Record found for city: abu samrah with city id: 172515\n",
      "Getting record 598 for the city: nelson bay\n",
      "Record found for city: nelson bay with city id: 2155562\n",
      "Getting record 599 for the city: la palma\n",
      "Record found for city: la palma with city id: 5364022\n",
      "Getting record 600 for the city: ruwi\n",
      "Record found for city: ruwi with city id: 287286\n",
      "End\n"
     ]
    }
   ],
   "source": [
    "# get weather data and print processing log\n",
    "searchcount = 0\n",
    "search_data = []\n",
    "city_list = []\n",
    "country_list = []\n",
    "\n",
    "print(\"Getting API weather data\")\n",
    "print(\"----\")\n",
    "\n",
    "for city in cities: \n",
    "    try:\n",
    "        print(f\"Getting record {searchcount} for the city: {city}\")\n",
    "        searchcount += 1\n",
    "        response = requests.get(query_url + city)\n",
    "        datapull = response.json()\n",
    "        country = datapull['sys']['country']\n",
    "        searchcityID = datapull['id']\n",
    "        search_data.append(datapull)\n",
    "        city_list.append(city)\n",
    "        country_list.append(country)\n",
    "        print(f\"Record found for city: {city} with city id: {searchcityID}\")\n",
    "    except Exception as ex:\n",
    "        print(f\"No record found for city: {city}\")\n",
    "        pass\n",
    "\n",
    "print(\"End\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "552"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(search_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Convert Raw Data to DataFrame\n",
    "* Export the city data into a .csv.\n",
    "* Display the DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "# get data for each weather category\n",
    "latitude = [data.get(\"coord\").get(\"lat\") for data in search_data]\n",
    "longitude = [data.get(\"coord\").get(\"lon\") for data in search_data]\n",
    "temperature = [data.get(\"main\").get(\"temp\") for data in search_data]\n",
    "humidity = [data.get(\"main\").get(\"humidity\") for data in search_data]\n",
    "clouds = [data.get(\"clouds\").get(\"all\") for data in search_data]\n",
    "wind = [data.get(\"wind\").get(\"speed\") for data in search_data]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City Name</th>\n",
       "      <th>Country</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Cloudiness</th>\n",
       "      <th>Winds</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>arlit</td>\n",
       "      <td>NE</td>\n",
       "      <td>18.74</td>\n",
       "      <td>7.39</td>\n",
       "      <td>104.22</td>\n",
       "      <td>18</td>\n",
       "      <td>53</td>\n",
       "      <td>9.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>suffolk</td>\n",
       "      <td>US</td>\n",
       "      <td>40.87</td>\n",
       "      <td>-72.80</td>\n",
       "      <td>74.79</td>\n",
       "      <td>64</td>\n",
       "      <td>1</td>\n",
       "      <td>12.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>vaini</td>\n",
       "      <td>TO</td>\n",
       "      <td>-21.20</td>\n",
       "      <td>-175.20</td>\n",
       "      <td>69.80</td>\n",
       "      <td>77</td>\n",
       "      <td>75</td>\n",
       "      <td>10.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>albany</td>\n",
       "      <td>US</td>\n",
       "      <td>42.60</td>\n",
       "      <td>-73.97</td>\n",
       "      <td>71.33</td>\n",
       "      <td>64</td>\n",
       "      <td>40</td>\n",
       "      <td>8.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>kapaa</td>\n",
       "      <td>US</td>\n",
       "      <td>22.08</td>\n",
       "      <td>-159.32</td>\n",
       "      <td>72.09</td>\n",
       "      <td>83</td>\n",
       "      <td>40</td>\n",
       "      <td>14.99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  City Name Country  Latitude  Longitude  Temperature  Humidity  Cloudiness  \\\n",
       "0     arlit      NE     18.74       7.39       104.22        18          53   \n",
       "1   suffolk      US     40.87     -72.80        74.79        64           1   \n",
       "2     vaini      TO    -21.20    -175.20        69.80        77          75   \n",
       "3    albany      US     42.60     -73.97        71.33        64          40   \n",
       "4     kapaa      US     22.08    -159.32        72.09        83          40   \n",
       "\n",
       "   Winds  \n",
       "0   9.19  \n",
       "1  12.75  \n",
       "2  10.29  \n",
       "3   8.05  \n",
       "4  14.99  "
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather_df = pd.DataFrame({\"City Name\":city_list,\n",
    "                          \"Country\":country_list,\n",
    "                          \"Latitude\":latitude,\n",
    "                          \"Longitude\":longitude,\n",
    "                          \"Temperature\":temperature,\n",
    "                          \"Humidity\":humidity,\n",
    "                          \"Cloudiness\":clouds,\n",
    "                          \"Winds\":wind})\n",
    "weather_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 552 entries, 0 to 551\n",
      "Data columns (total 8 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   City Name    552 non-null    object \n",
      " 1   Country      552 non-null    object \n",
      " 2   Latitude     552 non-null    float64\n",
      " 3   Longitude    552 non-null    float64\n",
      " 4   Temperature  552 non-null    float64\n",
      " 5   Humidity     552 non-null    int64  \n",
      " 6   Cloudiness   552 non-null    int64  \n",
      " 7   Winds        552 non-null    float64\n",
      "dtypes: float64(4), int64(2), object(2)\n",
      "memory usage: 34.6+ KB\n"
     ]
    }
   ],
   "source": [
    "weather_df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Inspect the data and remove the cities where the humidity > 100%.\n",
    "----\n",
    "Skip this step if there are no cities that have humidity > 100%. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Cloudiness</th>\n",
       "      <th>Winds</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>552.000000</td>\n",
       "      <td>552.000000</td>\n",
       "      <td>552.000000</td>\n",
       "      <td>552.000000</td>\n",
       "      <td>552.000000</td>\n",
       "      <td>552.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>22.096793</td>\n",
       "      <td>15.339040</td>\n",
       "      <td>69.668986</td>\n",
       "      <td>67.838768</td>\n",
       "      <td>48.706522</td>\n",
       "      <td>8.012174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>33.123714</td>\n",
       "      <td>91.808661</td>\n",
       "      <td>15.464670</td>\n",
       "      <td>22.505279</td>\n",
       "      <td>39.104691</td>\n",
       "      <td>5.245639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-54.800000</td>\n",
       "      <td>-179.170000</td>\n",
       "      <td>28.400000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.040000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-4.602500</td>\n",
       "      <td>-68.307500</td>\n",
       "      <td>57.200000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>4.140000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>26.545000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>71.900000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>42.500000</td>\n",
       "      <td>6.930000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>50.070000</td>\n",
       "      <td>97.400000</td>\n",
       "      <td>80.932500</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>10.290000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>78.220000</td>\n",
       "      <td>179.320000</td>\n",
       "      <td>115.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>32.210000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Latitude   Longitude  Temperature    Humidity  Cloudiness       Winds\n",
       "count  552.000000  552.000000   552.000000  552.000000  552.000000  552.000000\n",
       "mean    22.096793   15.339040    69.668986   67.838768   48.706522    8.012174\n",
       "std     33.123714   91.808661    15.464670   22.505279   39.104691    5.245639\n",
       "min    -54.800000 -179.170000    28.400000    3.000000    0.000000    0.040000\n",
       "25%     -4.602500  -68.307500    57.200000   55.000000    3.000000    4.140000\n",
       "50%     26.545000   22.000000    71.900000   73.000000   42.500000    6.930000\n",
       "75%     50.070000   97.400000    80.932500   84.000000   90.000000   10.290000\n",
       "max     78.220000  179.320000   115.000000  100.000000  100.000000   32.210000"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "weather_df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plotting the Data\n",
    "* Use proper labeling of the plots using plot titles (including date of analysis) and axes labels.\n",
    "* Save the plotted figures as .pngs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Latitude vs. Temperature Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The warmest temperatures range from about 15 degrees north to about 50 degrees north.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(weather_df[\"Latitude\"], weather_df[\"Temperature\"], marker=\"o\", color=\"orange\")\n",
    "\n",
    "plt.title(\"Temperature by City Latitude\")\n",
    "plt.ylabel(\"Max Temperature (F)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "plt.savefig(\"LatTemp_plot.png\")\n",
    "\n",
    "print(f\"The warmest temperatures range from about 15 degrees north to about 50 degrees north.\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Latitude vs. Humidity Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(weather_df[\"Latitude\"], weather_df[\"Humidity\"], marker=\"o\", color=\"green\")\n",
    "\n",
    "plt.title(\"Humidity by City Latitude\")\n",
    "plt.ylabel(\"Humidity\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "plt.savefig(\"LatHum_plot.png\")\n",
    "\n",
    "print(f\"There are more cities in the northern hemisphere in this sample. Humidity seems to have no relevance in relation to latitude.\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Latitude vs. Cloudiness Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There few cities with zero or low cloudiness near the equator.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(weather_df[\"Latitude\"], weather_df[\"Cloudiness\"], marker=\"o\", color=\"gray\")\n",
    "\n",
    "plt.title(\"Cloudiness by City Latitude\")\n",
    "plt.ylabel(\"Cloudiness\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "plt.savefig(\"LatCloud_plot.png\")\n",
    "\n",
    "print(f\"There few cities with zero or low cloudiness near the equator. There are many cities with high levels of cloudiness near the equator.\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Latitude vs. Wind Speed Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "I don't see any clear correlation in wind speed and latitude. There seem to be a few high outliers not near the equator in both hemispheres.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(weather_df[\"Latitude\"], weather_df[\"Winds\"], marker=\"o\", color=\"skyblue\")\n",
    "\n",
    "plt.title(\"Winds by City Latitude\")\n",
    "plt.ylabel(\"Winds (mph)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "plt.savefig(\"LatWind_plot.png\")\n",
    "\n",
    "print(f\"I don't see any clear correlation in wind speed and latitude. There seem to be a few high outliers not near the equator in both hemispheres.\")\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# OPTIONAL: Create a function to create Linear Regression plots"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 391 entries, 0 to 551\n",
      "Data columns (total 8 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   City Name    391 non-null    object \n",
      " 1   Country      391 non-null    object \n",
      " 2   Latitude     391 non-null    float64\n",
      " 3   Longitude    391 non-null    float64\n",
      " 4   Temperature  391 non-null    float64\n",
      " 5   Humidity     391 non-null    int64  \n",
      " 6   Cloudiness   391 non-null    int64  \n",
      " 7   Winds        391 non-null    float64\n",
      "dtypes: float64(4), int64(2), object(2)\n",
      "memory usage: 27.5+ KB\n",
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 161 entries, 2 to 549\n",
      "Data columns (total 8 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   City Name    161 non-null    object \n",
      " 1   Country      161 non-null    object \n",
      " 2   Latitude     161 non-null    float64\n",
      " 3   Longitude    161 non-null    float64\n",
      " 4   Temperature  161 non-null    float64\n",
      " 5   Humidity     161 non-null    int64  \n",
      " 6   Cloudiness   161 non-null    int64  \n",
      " 7   Winds        161 non-null    float64\n",
      "dtypes: float64(4), int64(2), object(2)\n",
      "memory usage: 11.3+ KB\n"
     ]
    }
   ],
   "source": [
    "# Create Northern and Southern Hemisphere DataFrames\n",
    "northern_df = weather_df.loc[pd.to_numeric(weather_df[\"Latitude\"]).astype(float) > 0, :]\n",
    "southern_df = weather_df.loc[pd.to_numeric(weather_df[\"Latitude\"]).astype(float) < 0, :]\n",
    "northern_df.head()\n",
    "northern_df.info()\n",
    "southern_df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Northern Hemisphere - Max Temp vs. Latitude Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y = -0.52x + 91.92\n",
      "r-square value: -0.699139322022003\n",
      "The regression displays a negative correlation.\n",
      "The temperature tends to increase nearing the equator.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = pd.to_numeric(northern_df[\"Latitude\"]).astype(float)\n",
    "y = pd.to_numeric(northern_df[\"Temperature\"]).astype(float)\n",
    "(slope, intercept,rvalue, pvalue, stderr) = linregress(x, y)\n",
    "regress = x * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "plt.scatter(x, y)\n",
    "plt.plot(x,regress,\"r-\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.ylabel(\"Temperature\")\n",
    "plt.title(\"Northern Hemisphere - Temperature by Latitude, Linear Regression\")\n",
    "plt.annotate(line_eq,(5,10),fontsize=12,color=\"red\")\n",
    "print(line_eq)\n",
    "print(f\"r-square value: {rvalue}\")\n",
    "print(f\"The regression displays a negative correlation.\")\n",
    "print(f\"The temperature tends to increase nearing the equator.\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Southern Hemisphere - Max Temp vs. Latitude Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y = 0.99x + 86.4\n",
      "r-square value: 0.8585539081496876\n",
      "The regression displays a positive correlation.\n",
      "The temperature tends to increase nearing the equator in a larger correlation than in the northern hemisphere.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = pd.to_numeric(southern_df[\"Latitude\"]).astype(float)\n",
    "y = pd.to_numeric(southern_df[\"Temperature\"]).astype(float)\n",
    "(slope, intercept,rvalue, pvalue, stderr) = linregress(x, y)\n",
    "regress = x * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "plt.scatter(x, y)\n",
    "plt.plot(x,regress,\"r-\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.ylabel(\"Temperature\")\n",
    "plt.title(\"Southern Hemisphere - Temperature by Latitude, Linear Regression\")\n",
    "plt.annotate(line_eq,(5,10),fontsize=12,color=\"red\")\n",
    "print(line_eq)\n",
    "print(f\"r-square value: {rvalue}\")\n",
    "print(f\"The regression displays a positive correlation.\")\n",
    "print(f\"The temperature tends to increase nearing the equator in a larger correlation than in the northern hemisphere.\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Northern Hemisphere - Humidity (%) vs. Latitude Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y = 0.06x + 66.02\n",
      "r-square value: 0.05699785353361463\n",
      "The regression displays a barely positive correlation.\n",
      "Latitude and humidity likely have no correlation.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = pd.to_numeric(northern_df[\"Latitude\"]).astype(float)\n",
    "y = pd.to_numeric(northern_df[\"Humidity\"]).astype(float)\n",
    "(slope, intercept,rvalue, pvalue, stderr) = linregress(x, y)\n",
    "regress = x * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "plt.scatter(x, y)\n",
    "plt.plot(x,regress,\"r-\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.ylabel(\"Humidity\")\n",
    "plt.title(\"Northern Hemisphere - Humidity by Latitude, Linear Regression\")\n",
    "plt.annotate(line_eq,(5,10),fontsize=12,color=\"red\")\n",
    "print(line_eq)\n",
    "print(f\"r-square value: {rvalue}\")\n",
    "print(f\"The regression displays a barely positive correlation.\")\n",
    "print(f\"Latitude and humidity likely have no correlation.\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Southern Hemisphere - Humidity (%) vs. Latitude Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y = -0.16x + 62.91\n",
      "r-square value: -0.09461454114060087\n",
      "The regression displays a barely negative correlation.\n",
      "Latitude and humidity likely have no correlation.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = pd.to_numeric(southern_df[\"Latitude\"]).astype(float)\n",
    "y = pd.to_numeric(southern_df[\"Humidity\"]).astype(float)\n",
    "(slope, intercept,rvalue, pvalue, stderr) = linregress(x, y)\n",
    "regress = x * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "plt.scatter(x, y)\n",
    "plt.plot(x,regress,\"r-\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.ylabel(\"Humidity\")\n",
    "plt.title(\"Southern Hemisphere - Humidity by Latitude, Linear Regression\")\n",
    "plt.annotate(line_eq,(5,10),fontsize=12,color=\"red\")\n",
    "print(line_eq)\n",
    "print(f\"r-square value: {rvalue}\")\n",
    "print(f\"The regression displays a barely negative correlation.\")\n",
    "print(f\"Latitude and humidity likely have no correlation.\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Northern Hemisphere - Cloudiness (%) vs. Latitude Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y = 0.27x + 40.12\n",
      "r-square value: 0.14089228234180526\n",
      "The regression displays a barely positive correlation.\n",
      "Latitude and cloudiness have little or no correlation.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = pd.to_numeric(northern_df[\"Latitude\"]).astype(float)\n",
    "y = pd.to_numeric(northern_df[\"Cloudiness\"]).astype(float)\n",
    "(slope, intercept,rvalue, pvalue, stderr) = linregress(x, y)\n",
    "regress = x * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "plt.scatter(x, y)\n",
    "plt.plot(x,regress,\"r-\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.ylabel(\"Cloudiness\")\n",
    "plt.title(\"Northern Hemisphere - Cloudiness by Latitude, Linear Regression\")\n",
    "plt.annotate(line_eq,(5,10),fontsize=12,color=\"red\")\n",
    "print(line_eq)\n",
    "print(f\"r-square value: {rvalue}\")\n",
    "print(f\"The regression displays a barely positive correlation.\")\n",
    "print(f\"Latitude and cloudiness have little or no correlation.\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Southern Hemisphere - Cloudiness (%) vs. Latitude Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y = 0.27x + 49.01\n",
      "r-square value: 0.09253426911096549\n",
      "The regression displays a barely positive correlation.\n",
      "Latitude and cloudiness have little or no correlation.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = pd.to_numeric(southern_df[\"Latitude\"]).astype(float)\n",
    "y = pd.to_numeric(southern_df[\"Cloudiness\"]).astype(float)\n",
    "(slope, intercept,rvalue, pvalue, stderr) = linregress(x, y)\n",
    "regress = x * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "plt.scatter(x, y)\n",
    "plt.plot(x,regress,\"r-\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.ylabel(\"Cloudiness\")\n",
    "plt.title(\"Southern Hemisphere - Cloudiness by Latitude, Linear Regression\")\n",
    "plt.annotate(line_eq,(5,10),fontsize=12,color=\"red\")\n",
    "print(line_eq)\n",
    "print(f\"r-square value: {rvalue}\")\n",
    "print(f\"The regression displays a barely positive correlation.\")\n",
    "print(f\"Latitude and cloudiness have little or no correlation.\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Northern Hemisphere - Wind Speed (mph) vs. Latitude Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y = 0.0x + 7.75\n",
      "r-square value: 0.018600208800667956\n",
      "The regression displays a barely positive correlation.\n",
      "Latitude and cloudiness have little or no correlation.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = pd.to_numeric(northern_df[\"Latitude\"]).astype(float)\n",
    "y = pd.to_numeric(northern_df[\"Winds\"]).astype(float)\n",
    "(slope, intercept,rvalue, pvalue, stderr) = linregress(x, y)\n",
    "regress = x * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "plt.scatter(x, y)\n",
    "plt.plot(x,regress,\"r-\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.ylabel(\"Winds\")\n",
    "plt.title(\"Northern Hemisphere - Winds by Latitude, Linear Regression\")\n",
    "plt.annotate(line_eq,(5,10),fontsize=12,color=\"red\")\n",
    "print(line_eq)\n",
    "print(f\"r-square value: {rvalue}\")\n",
    "print(f\"The regression displays a barely positive correlation.\")\n",
    "print(f\"Latitude and wind have little or no correlation.\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "####  Southern Hemisphere - Wind Speed (mph) vs. Latitude Linear Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y = -0.02x + 7.85\n",
      "r-square value: -0.04017256658806312\n",
      "The regression displays a barely positive correlation.\n",
      "Latitude and wind have little or no correlation.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = pd.to_numeric(southern_df[\"Latitude\"]).astype(float)\n",
    "y = pd.to_numeric(southern_df[\"Winds\"]).astype(float)\n",
    "(slope, intercept,rvalue, pvalue, stderr) = linregress(x, y)\n",
    "regress = x * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "plt.scatter(x, y)\n",
    "plt.plot(x,regress,\"r-\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.ylabel(\"Winds\")\n",
    "plt.title(\"Southern Hemisphere - Winds by Latitude, Linear Regression\")\n",
    "plt.annotate(line_eq,(5,10),fontsize=12,color=\"red\")\n",
    "print(line_eq)\n",
    "print(f\"r-square value: {rvalue}\")\n",
    "print(f\"The regression displays a barely negative correlation.\")\n",
    "print(f\"Latitude and wind have little or no correlation.\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "# export df to csv file\n",
    "weather_df.to_csv(\"weather_df.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "nteract": {
   "version": "0.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
